# Test of the grep2awk zle thing. 

%prep
  if ( zmodload -i zsh/zpty ) >/dev/null 2>&1; then
    . ./comptest
    comptestinit -v -z zsh
  else
    ZTST_unimplemented="the zsh/zpty module is not available"
  fi
  zpty_run 'fpath=( .. $fpath )'
  zpty_run 'autoload -Uz grep2awk'
  zpty_run 'zle -N grep2awk'
  zpty_run 'bindkey "\C-P" grep2awk'

%test

  zletest $'grep regex data\C-P'
0:Basic function
>BUFFER: awk '/regex/ {print $0}' data
>CURSOR: 22

  zletest $'grep "aa  bbb" data\C-P'
0:word split regex
>BUFFER: awk '/aa  bbb/ {print $0}' data
>CURSOR: 24

  zletest $'grep -l regex data\C-P'
0:print matching files
>BUFFER: awk '/regex/ {print FILENAME; nextfile}' data
>CURSOR: 38

  zletest $'grep -L regex data\C-P'
0:print not matching files
>BUFFER: awk 'BEGINFILE{flag=0};ENDFILE{if (flag==0)print FILENAME}; /regex/ {flag=1; nextfile}' data
>CURSOR: 85

  zletest $'grep -H regex data\C-P'
0:print filename
>BUFFER: awk '/regex/ {print FILENAME":"$0}' data
>CURSOR: 33

  zletest $'grep -v regex data\C-P'
0:inverse match
>BUFFER: awk '!/regex/ {print $0}' data
>CURSOR: 23

  zletest $'grep -w regex data\C-P'
0:Word match
>BUFFER: awk '/\<(regex)\>/ {print $0}' data
>CURSOR: 28

  zletest $'grep -x regex data\C-P'
0:Line match
>BUFFER: awk '/^(regex)$/ {print $0}' data
>CURSOR: 26

  zletest $'grep -c regex data\C-P'
0:Count matches
>BUFFER: awk 'BEGINFILE{c=0};ENDFILE{if(c>0)print FILENAME":"c}; /regex/ {c++}' data
>CURSOR: 68

  zletest $'grep -P regex data\C-P'
0:No support for pcre
>BUFFER: grep -P regex data
>CURSOR: 18

  zletest $'fgrep \'a*b[c}d?e.f$g^h\\i]\'\C-P'
0:fgrep: From fixed to ERE
>BUFFER: awk '/a\*b\[c\}d\?e\.f\$g\^h\\i\]/ {print $0}'
>CURSOR: 44

  zletest $'grep \'a+b\[0-9]\+\\\'\C-P'
0:From Basic Regular Expression to Extended Regular Expression
>BUFFER: awk '/a\+b[0-9]\+/ {print $0}'
>CURSOR: 28

  zletest $'grep "a\(b\|c\)d" data\C-P'
0:BRE2ERE: Subexpressions
>BUFFER: awk '/a\(b\|c\)d/ {print $0}' data
>CURSOR: 27

  zletest $'grep -E "1[^]a-z]2"\C-P'
0:Bracket expression: ERE
>BUFFER: awk '/1[^]a-z]2/ {print $0}'
>CURSOR: 26

  zletest $'grep "1[^]a-z]2"\C-P'
0:Bracket expression: BRE
>BUFFER: awk '/1[^]a-z]2/ {print $0}'
>CURSOR: 26


%clean
  zmodload -ui zsh/zpty

